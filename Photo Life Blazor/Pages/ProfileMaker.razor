@page "/profile/{user}"
@inject NavigationManager NavigationManager
@using System.Collections.Generic
@using System.Text.Json

<PageTitle>PhotoLife: Profile Maker</PageTitle>

<div class="text-center" id="no-scroll-bar">
    @if (!newProfileGenerated)
    {
        @* Loading PopUp for when the profile is being generated *@
        @if (isLoading)
        {
            <div class="modal">
                <div class="modal-content">
                    <div class="spinner"></div>
                    <p>Using your data to build a profile *ethically*...</p>
                </div>
            </div>
        }
        @* Title and Description *@
        <div class="text-center my-2" style="margin: 0 4em">
            <h1>Profile Maker</h1>
            <h5>Please choose at least one of the profile stats you would like to see about your photos below.</h5>
        </div>
        <div class="container p-lg-2">
            @foreach (var preset in options)
            {
                <input type="checkbox" style="width: 1em; height: 1em; margin: 1em;" checked="@preset.isChecked" @onchange="e => UpdateSelection(preset)">
                <label><h4>@preset.Name</h4></label>
                <br />
            }
        </div>
        <div class="p-lg-4">
            <button class="btn btn-default btn-main" @onclick="AddSelectedPresets"><h4>Get My Profile!</h4></button>
        </div>
        @if (noOptionsChosen == true)
        {
            <p><i>You must choose at least one option to run the profile maker algorithm.</i></p>
        }
    } else
    {
        <NewProfile Headers=(onlyPresetNames) />
    }
</div>

@code {
    [Parameter]
    public string user { get; set; }

    private bool noOptionsChosen = false; // presets
    private bool isLoading = false; // loading screen
    private List<string> onlyPresetNames = new List<string>(); // preset headers for the profile stats
    private bool newProfileGenerated = false; // switches from profile maker to profile stats

    public class PresetOption
    {
        public string Name { get; set; }
        public bool isChecked { get; set; }
    }

    private List<PresetOption> options = new List<PresetOption>
    {
        new PresetOption { Name = "Time Of Day", isChecked = false },
        new PresetOption { Name = "GPS", isChecked = false },
        new PresetOption { Name = "Camera Model", isChecked = false },
        new PresetOption { Name = "Week Day", isChecked = false }
    };

    private List<PresetOption> selectedPresets = new List<PresetOption>();

    private void UpdateSelection(PresetOption option)
    {
        option.isChecked = !option.isChecked;
    }

    // adds all the selected options to a headers list for the stats
    async private Task AddSelectedPresets()
    {
        selectedPresets = options.Where(f => f.isChecked).ToList();
        foreach (var preset in selectedPresets)
        {
            onlyPresetNames.Add(preset.Name);
        }

        if (selectedPresets.Count == 0)
        {
            noOptionsChosen = true;
        }
        else
        {
            noOptionsChosen = false;
            await SetUpNewProfile();
        }
    }

    // start loading screen, ask for data, and send to the new profile component
    async private Task SetUpNewProfile()
    {        
        isLoading = true;
        StateHasChanged();
        await Task.Delay(5555);

        // Call the Profile Maker API and wait for respone.
        //await ProfileMaker.Sum("");
        //send data to next page or call api in the new profile? OR keep everything on this page??????????????????????????????????????????
        //await curl - X POST https://localhost:7214/api/.... -d '{"username": {user}, "connString": {selectedPresets} }' - H "content-type: application/json";


        isLoading = false;
        StateHasChanged();
        newProfileGenerated = true;
        //NavigationManager.NavigateTo($"/profile_results/{user}/{Uri.EscapeDataString(string.Join('-', onlyPresetNames))}");
    }
}