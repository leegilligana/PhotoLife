@using Photo_Life_Blazor.Services
@page "/extractor"
@inject NavigationManager NavigationManager
@inject GoogleService GoogleServices

<PageTitle>PhotoLife: Metadata Upload</PageTitle>

<div class="text-center my-2">
    <div class="sliding">
        @* Loading PopUp for when the photos are downloading from the PhotoLife folder *@
        @if (isLoading)
        {
            <div class="modal">
                <div class="modal-content">
                    <div class="spinner"></div>
                    <p>Setting up & extracting photo metadata *grab a snack*...</p>
                </div>
            </div>
        }
        <div class="p-2 slide">
            <h1>Step 1: Metadata Extractor</h1>
            <h5>
                To start, please navigate to your Google Drive and create/update a folder labeled <b>'PhotoLife'</b> where all the desired
                photos you wish to upload can be placed. We kindly request that you include a minimum of 5 photos in this folder. 
                Afterwards, proceed to sign into your Google Drive using the button provided below to grant our program access to 
                the photos stored within said folder. When prompted, please check the box that gives us access to your Google Drive files 
                (don't worry, we'll only be downloading the metadata from your PhotoLife folder).<br />
                Acceptable file types: {.png, .jpg, .heic}
            </h5>
            <div class="align-content-center justify-content-center">
                <button class="btn btn-main" @onclick="googleDrive" style="font-size: 22px;"><h4>Sign Into Google</h4></button>
            </div>
            @if (failedLogIn == true)
            {
                <p><i>There was an issue with logging you in. Please check that you have a PhotoLife folder with pictures in it and that 
                    you've given our app permissions to extract data from your Google Drive.</i></p>
            }
        </div>
        <div class="p-2 slide delay">
            <h1>Step 2: Analyzing The Data</h1>
            <h5>
                With the photos you provided, you can either: <br />
                1) Generate Albums based on specific filter options. [Left]
                <br />OR<br />
                2) Create a Profile based on your photo metadata charateristics. [Right]
                <br />Please click on an option below:
            </h5>
            @* Error Msg if not signed in *@
            @if (noSignIn == true)
            {
                <p><i>You must sign into Google before moving forward.</i></p>
            }
            <div class="container">
                <div class="album">
                    <div class="p-lg-4">
                        <button class="btn btn-default btn-main" @onclick="NavigateToAlbum"><h4>Generate Album</h4></button>
                    </div>
                </div>
                <div class="profile">
                    <div class="p-lg-4">
                        <button class="btn btn-default btn-main" @onclick="NavigateToProfile"><h4>Generate Profile</h4></button>
                    </div>
                </div>
            </div>
            <div class="p-lg-4">
                <button class="btn btn-default btn-main btn-dlt" @onclick="DeleteAllData"><h4>Delete Data</h4></button>
            </div>
        </div>
    </div>
</div>

@code {
    private string user = "";
    private bool noSignIn = false; // keeps track of if the user is signed in or not
    private bool isLoading = false; // loading screen
    private bool failedLogIn = false;
    private string uploadStatus = "NULL";

    private async void googleDrive()
    {
        isLoading = true; // loading screen while the photos download
        StateHasChanged();
        user = await GoogleServices.setUp(); // get username and open Sign-In Page
        uploadStatus = await GoogleServices.getUserPhotos(); // grab photos from PhotoLife file
        if (uploadStatus == "false")
        {
            noSignIn = true;
            failedLogIn = true;
        } else
        {
            noSignIn = false;
        }
        isLoading = false;
        StateHasChanged();
    }

    private async Task NavigateToAlbum()
    {
        if (user != "")
        {
            noSignIn = false;
            NavigationManager.NavigateTo($"/album/{user}");
        } else {
            noSignIn = true;
        }
    }

    private async void DeleteAllData()
    {
        await GoogleServices.deleteAll();
    }

    private void NavigateToProfile()
    {
        if (user != "")
        {
            noSignIn = false;
            NavigationManager.NavigateTo($"/profile/{user}");
        } else {
            noSignIn = true;
        }
    }
}
